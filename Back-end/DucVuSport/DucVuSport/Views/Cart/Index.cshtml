@{
    var cart = Session["Cart"] as List<DucVuSport.Models.CartModel>;
    var format = System.Globalization.CultureInfo.GetCultureInfo("vi-VN");
    var total = 0;
    var discount = 0;
}
<div class="cart__detail">
    @if (Session[DucVuSport.Common.Constans.Session.CART_SESSION] == null)
    {
        <div class="detail__no-cart">
            <div class="no-cart__img">
                <img src="~/Images/Banners/no-cart.png" alt="">
            </div>
            <div class="no-cart__title">
                Bạn chưa chọn sản phẩm nào
            </div>
            <div class="btn"> <a href="/Product/Index">Mua hàng</a></div>
        </div>
    }
    else
    {
        <div class="detail__has-cart">
            <div class="has-cart__left col-md-12 col-12">
                <div class="cart__title">
                    <div class="col-md-5 col-5">Tên sản phẩm</div>
                    <div class="col-md-3 col-3">Đơn giá</div>
                    <div class="col-md-2 col-2">Số lượng</div>
                    <div class="col-md-2 col-2">Thành tiền</div>
                </div>
                @foreach (var item in cart)
                {
                    <div class="cart__item">
                        <div class="__product col-md-5 col-5">
                            <div class="__product_img col-md-2"><img src="~/Images/Products/@item.product.Image" alt=""></div>
                            <div class="__product_name col-md-10">@item.product.ProductName</div>
                        </div>

                        <div class="__price col-md-3 col-3">
                            @{
                                var price = item.product.Price - item.product.Price * item.product.Discount;
                                var total_money = price * item.quantity;
                                total += Convert.ToInt32(total_money);
                                discount += Convert.ToInt32(item.product.Price * item.product.Discount * item.quantity);
                            }

                            <div class="__old-price text-decoration-line-through">@String.Format(format, "{0:c0}", item.product.Price)</div>
                            <div class="__new-price">@String.Format(format, "{0:c0}", price)</div>
                        </div>
                        <div class="__amount col-md-2 col-2">
                            <div class="buttons_added">
                                <input class="minus is-form" type="button" value="-">
                                <input aria-label="quantity" class="input-qty" max="100" min="1" type="number" value="@item.quantity">
                                <input class="plus is-form" type="button" value="+">
                            </div>
                        </div>

                        <div class="__total col-md-2 col-2">
                            <span>@String.Format(format, "{0:c0}", total_money)</span>
                        </div>
                        <div class="__action" id="@item.product.ProductID">
                            <div class="__update">Sửa</div>
                            <div class="__delete">Xoá</div>
                        </div>
                    </div>
                }
            </div>
            <script>
                $('.__delete').click(function () {
                    var model = {};
                    model.id = $(this).parent().attr('id');
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Remove", "Cart")',
                        data: JSON.stringify(model),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function () {
                            location.reload();
                            alert("Xóa thành công");
                        }
                    });
                })

                $('.__update').click(function () {
                    var model = {};
                    model.id = $(this).parent().attr('id');
                    model.quantity = $('.input-qty').val();
                    $.ajax({
                        type: "POST",
                        url: '@Url.Action("Update", "Cart")',
                        data: JSON.stringify(model),
                        dataType: "json",
                        contentType: "application/json; charset=utf-8",
                        success: function (response) {
                            toastr.success(response.message, 'Thông báo');
                        }
                    });
                })
            </script>
        </div>
        <div class="s">
            <h3 style="padding-left: 1rem; font-weight: bold;">Nhập thông tin giao hàng</h3>
            <div class="ship-infor">
                <div class="ship-infor-form col-md-8 col-12">
                    @model DucVuSport.Models.Entities.User
                    @using (Html.BeginForm("Order", "Cart", FormMethod.Post))
                    {
                        @Html.AntiForgeryToken()
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

                        <div class="row">
                            <div class="col">
                                <label>Họ và tên (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.FullName, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col">
                                <label>Số điện thoại (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col">
                                <label>Email (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>


                        <div class="row">
                            <div class="col">
                                <label>Tỉnh / Thành phố (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.Province, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.Province, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col">
                                <label>Quận / Huyện (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.District, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.District, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                            <div class="col">
                                <label>Phường / Xã (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.Ward, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.Ward, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div class="row">
                            <div class="col">
                                <label>Số nhà, đường (<span style="color:red;">*</span>):</label>
                                @Html.ValidationMessageFor(model => model.AddressDetail, "", new { @class = "text-danger" })
                                @Html.EditorFor(model => model.AddressDetail, new { htmlAttributes = new { @class = "form-control" } })
                            </div>
                        </div>
                        <div>
                            <button class="btn btn-primary btn-lg btn-block" type="submit">Đặt hàng</button>
                        </div>
                    }
                </div>
                <div class="has-cart__right col-md-4 col-12">
                    <div class="__cart-total">
                        <div class="__total-detail">
                            @{
                                var VAT = total * 0.1;
                                var total_and_VAT = total + VAT - discount;
                            }
                            <div>
                                <span>Tổng cộng:</span>
                                <span class="fw-bold">@String.Format(format, "{0:c0}", total)</span>
                            </div>
                            <div>
                                <span>Giảm giá:</span>
                                <span class="fw-bold">-@String.Format(format, "{0:c0}", discount)</span>
                            </div>
                            <div>
                                <span>VAT:</span>
                                <span class="fw-bold">@String.Format(format, "{0:c0}", VAT)</span>
                            </div>
                            <hr style="border: 1px solid black;" />
                            <div>
                                <span>Thành tiền:</span>
                                <span class="fw-bold">@String.Format(format, "{0:c0}", total_and_VAT)</span>
                            </div>
                            <div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>